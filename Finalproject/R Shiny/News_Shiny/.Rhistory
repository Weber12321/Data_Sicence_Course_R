}
})
return(DATA)
}
Class<-function(Ary){
DATA = NULL
Min = min(Ary)
Max = max(Ary)
Inter = (Max -Min)/3
sapply(Ary,function(x){
if(Min<= x && x < Min+Inter){
DATA=c(DATA,1)
}else if(Min+Inter<= x && x < Min+Inter*2){
DATA=c(DATA,2)
}else if(Min+Inter*2<= x && x <= Min+Inter*3){
DATA=c(DATA,3)
}
})
return(DATA)
}
Class(data[1,])
data[1,]
Class(data[,1])
Class(data[,1])
data[,1]
data <- iris
DATA = NULL
Ary = data[,1]
Min = min(Ary)
Max = max(Ary)
Inter = (Max -Min)/3
sapply(Ary,function(x){
if(Min<= x && x < Min+Inter){
DATA=c(DATA,1)
}else if(Min+Inter<= x && x < Min+Inter*2){
DATA=c(DATA,2)
}else if(Min+Inter*2<= x && x <= Min+Inter*3){
DATA=c(DATA,3)
}
})
DATA = NULL
Min = min(Ary)
Max = max(Ary)
Inter = (Max -Min)/3
sapply(Ary,function(x){
if(Min<= x && x < Min+Inter){
DATA=c(DATA,1)
}else if(Min+Inter<= x && x < Min+Inter*2){
DATA=c(DATA,2)
}else if(Min+Inter*2<= x && x <= Min+Inter*3){
DATA=c(DATA,3)
}
})
DATA = c()
Min = min(Ary)
Max = max(Ary)
Inter = (Max -Min)/3
sapply(Ary,function(x){
if(Min<= x && x < Min+Inter){
DATA=c(DATA,1)
}else if(Min+Inter<= x && x < Min+Inter*2){
DATA=c(DATA,2)
}else if(Min+Inter*2<= x && x <= Min+Inter*3){
DATA=c(DATA,3)
}
})
Output <- sapply(Ary,function(x){
if(Min<= x && x < Min+Inter){
DATA=c(DATA,1)
}else if(Min+Inter<= x && x < Min+Inter*2){
DATA=c(DATA,2)
}else if(Min+Inter*2<= x && x <= Min+Inter*3){
DATA=c(DATA,3)
}
})
Class<- function(Ary){
DATA = c()
Min = min(Ary)
Max = max(Ary)
Inter = (Max - Min)/3
Output <- sapply(Ary,function(x){
if(Min<= x && x < Min+Inter){
DATA=c(DATA,1)
}else if(Min+Inter<= x && x < Min+Inter*2){
DATA=c(DATA,2)
}else if(Min+Inter*2<= x && x <= Min+Inter*3){
DATA=c(DATA,3)
}
})
return(Output)
}
Class(data[,1])
data$Sepal.Length <- Class(data$Sepal.Length) %>% as.factor()
data$Sepal.Width <- Class(data$Sepal.Width) %>% as.factor()
data$Petal.Length <- Class(data$Petal.Length) %>% as.factor()
data$Petal.Width <- Class(data$Petal.Width) %>% as.factor()
data <- iris
Class<- function(Ary){
DATA = c()
Min = min(Ary)
Max = max(Ary)
Inter = (Max - Min)/3
Output <- sapply(Ary,function(x){
if(Min<= x && x < Min+Inter){
DATA=c(DATA,1)
}else if(Min+Inter<= x && x < Min+Inter*2){
DATA=c(DATA,2)
}else if(Min+Inter*2<= x && x <= Min+Inter*3){
DATA=c(DATA,3)
}
})
return(Output)
}
data$Sepal.Length <- Class(data$Sepal.Length) %>% as.factor()
data$Sepal.Width <- Class(data$Sepal.Width) %>% as.factor()
data$Petal.Length <- Class(data$Petal.Length) %>% as.factor()
data$Petal.Width <- Class(data$Petal.Width) %>% as.factor()
View(data)
require(arules)
rule <- apriori(iris,
parameter = list(minlen=4, supp=0.1, conf=0.7),
appearance = list(default = "lhs",
rhs = c("setosa", "versicolor", "virginica")))
data$Species <- data$Species %>% as.factor()
rule <- apriori(iris,
parameter = list(minlen=4, supp=0.1, conf=0.7),
appearance = list(default = "lhs",
rhs = c("setosa", "versicolor", "virginica")))
rule <- apriori(data,
parameter = list(minlen=4, supp=0.1, conf=0.7),
appearance = list(default = "lhs",
rhs = c("setosa", "versicolor", "virginica")))
rule <- apriori(data,
parameter = list(minlen=4, supp=0.1, conf=0.7),
appearance = list(default = "lhs",
rhs = c("Species = setosa", "Species = versicolor", "Species = virginica")))
data$Species
?apriori
rule <- apriori(data,
parameter = list(minlen=4, supp=0.1, conf=0.7),
appearance = list(items = c("Species = setosa", "Species = versicolor", "Species = virginica")))
rule <- apriori(data,
parameter = list(minlen=4, supp=0.1, conf=0.7),
appearance = list(items = c("Species=setosa", "Species=versicolor", "Species=virginica")))
inspect(rule)
inspect(rule)
inspect(rule)
rule <- apriori(data,
parameter = list(minlen=4, supp=0.1, conf=0.7),
appearance = list(default = "lhs",
rhs = c("Species=setosa", "Species=versicolor", "Species=virginica")))
inspect(rule)
sort.rule <- sort(rule, by="lift")
inspect(sort.rule)
require(arulesViz)
plot(sort.rule)
plot(sort.rule, method="graph", control=list(type="items"))
plot(sort.rule, method="grouped")
rm(list=ls())
library(magrittr)
datasets::iris
str(iris)
data <- iris
data$Species <- data$Species %>% as.factor()
summary(data)
Class<- function(Ary){
DATA = c()
Min = min(Ary)
Max = max(Ary)
Inter = (Max - Min)/3
Output <- sapply(Ary,function(x){
if(Min<= x && x < Min+Inter){
DATA=c(DATA,"small")
}else if(Min+Inter<= x && x < Min+Inter*2){
DATA=c(DATA,"median")
}else if(Min+Inter*2<= x && x <= Min+Inter*3){
DATA=c(DATA,"large")
}
})
return(Output)
}
data$Sepal.Length <- Class(data$Sepal.Length) %>% as.factor()
data$Sepal.Width <- Class(data$Sepal.Width) %>% as.factor()
data$Petal.Length <- Class(data$Petal.Length) %>% as.factor()
data$Petal.Width <- Class(data$Petal.Width) %>% as.factor()
require(arules)
rule <- apriori(data,
parameter = list(minlen=4, supp=0.1, conf=0.7),
appearance = list(default = "lhs",
rhs = c("Species=setosa", "Species=versicolor", "Species=virginica")))
inspect(rule)
sort.rule <- sort(rule, by="lift")
inspect(sort.rule)
require(arulesViz)
plot(sort.rule)
plot(sort.rule, method="graph", control=list(type="items"))
plot(sort.rule, method="grouped")
install.packages("kerasR")
library(kerasR)
install.packages("keras")
install.packages("tensorflow")
library(tensorflow)
library(keras)
library(keras)
library(tensorflow)
library(keras)
install.packages("tensorflow")
install.packages("keras")
library(keras)
library(tensorflow)
# Test Keras: Define a simple DNN network
require(keras)
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = "relu", input_shape = c(784)) %>%
layer_dropout(rate = 0.4) %>%
layer_dense(units = 128, activation = "relu") %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 10, activation = "softmax")
summary(model)
data <- dataset_mnist()
data
View(data)
library(keras)
library(tensorflow)
data <- dataset_mnist()
train_x<-data$train$x
train_y<-data$train$y
test_x<-data$test$x
test_y<-data$test$y
rm(data)
train_x <- array(train_x, dim = c(dim(train_x)[1], prod(dim(train_x)[-1]))) / 255
test_x <- array(test_x, dim = c(dim(test_x)[1], prod(dim(test_x)[-1]))) / 255
train_y<-to_categorical(train_y,10)
test_y<-to_categorical(test_y,10)
model <- keras_model_sequential()
model %>%
layer_dense(units = 784, input_shape = 784) %>%
layer_dropout(rate=0.4)%>%
layer_activation(activation = 'relu') %>%
layer_dense(units = 10) %>%
layer_activation(activation = 'softmax')
model %>% compile(
loss = 'categorical_crossentropy',
optimizer = 'adam',
metrics = c('accuracy')
)
model %>% fit(train_x, train_y, epochs = 100, batch_size = 128)
loss_and_metrics <- model %>% evaluate(test_x, test_y, batch_size = 128)
loss_and_metrics
library(rvest)
library(magrittr)
library(httr)
library(dplyr)
library(rvest)
library(magrittr)
library(httr)
library(dplyr)
data =read_html("https://www.ptt.cc/bbs/Gossiping/search?page=1&q=%E6%9F%AF%E6%96%87%E5%93%B2") %>% html_text(trim = T)
prefix <- "https://www.ptt.cc/bbs/Gossiping/search?page="
FindURL <- function(URL){
session = rvest::html_session(url = URL)
form = session %>%
html_node("form") %>%
html_form()
session_redirected = rvest::submit_form(session = session, form = form )
URLlink <- session_redirected %>%
html_nodes(".title a") %>% html_attr(.,"href")
title <- session_redirected %>%
html_nodes(".title a") %>% html_text
Date <- session_redirected %>%
html_nodes(".date") %>% html_text
output <- cbind(title,URLlink,Date)
return(output)
}
drko <- data.frame()
for(i in c(1:238))
{
x <- paste0(prefix, i , "&q=%E6%9F%AF%E6%96%87%E5%93%B2")
drko <- rbind(drko, FindURL(x))
}
url <- drko$URLlink
?htmlparse
?htmlParse
library(RCurl)
library(bitops)
library(RCurl)
library(XML)
?htmlParse
url <- drko$URLlink
res_drko <- sapply(drko$title,function(x){gsub("\\s", replacement = "_",x)})
# result <- FindURL("https://www.ptt.cc/bbs/Gossiping/search?page=1&q=%E6%9F%AF%E6%96%87%E5%93%B2")
# View(result)
getdoc <- function(url)
{
html <- htmlParse( getURL(url) )
session = rvest::html_session(url = url)
form = session %>%
html_node("form") %>%
html_form()
session_redirected = rvest::submit_form(session = session, form = form )
doc <- session_redirected %>%
html_nodes("#main-content") %>% html_text
ssion_redirected = rvest::submit_form(session = session, form = form )
time <- session_redirected %>%
html_nodes(".article-metaline+ .article-metaline .article-meta-value") %>% html_text
temp <- gsub( "  ", " 0", unlist(time) )
part <- strsplit( temp, split=" ", fixed=T )
timestamp <- part[[1]][4]
timestamp <- strsplit( timestamp, split=":", fixed=T )
hour <- timestamp[[1]][1]
print(hour)
}
doc
sapply(url, getdoc)
# result <- FindURL("https://www.ptt.cc/bbs/Gossiping/search?page=1&q=%E6%9F%AF%E6%96%87%E5%93%B2")
# View(result)
getdoc <- function(x)
{
# html <- htmlParse(getURL(x))
session = rvest::html_session(url = x)
form = session %>%
html_node("form") %>%
html_form()
session_redirected = rvest::submit_form(session = session, form = form )
doc <- session_redirected %>%
html_nodes("#main-content") %>% html_text
ssion_redirected = rvest::submit_form(session = session, form = form )
time <- session_redirected %>%
html_nodes(".article-metaline+ .article-metaline .article-meta-value") %>% html_text
temp <- gsub( "  ", " 0", unlist(time) )
part <- strsplit( temp, split=" ", fixed=T )
timestamp <- part[[1]][4]
timestamp <- strsplit( timestamp, split=":", fixed=T )
hour <- timestamp[[1]][1]
print(hour)
}
sapply(url, getdoc)
# result <- FindURL("https://www.ptt.cc/bbs/Gossiping/search?page=1&q=%E6%9F%AF%E6%96%87%E5%93%B2")
# View(result)
getdoc <- function(URL)
{
# html <- htmlParse(getURL(x))
session = rvest::html_session(url = URL)
form = session %>%
html_node("form") %>%
html_form()
session_redirected = rvest::submit_form(session = session, form = form )
doc <- session_redirected %>%
html_nodes("#main-content") %>% html_text
ssion_redirected = rvest::submit_form(session = session, form = form )
time <- session_redirected %>%
html_nodes(".article-metaline+ .article-metaline .article-meta-value") %>% html_text
temp <- gsub( "  ", " 0", unlist(time) )
part <- strsplit( temp, split=" ", fixed=T )
timestamp <- part[[1]][4]
timestamp <- strsplit( timestamp, split=":", fixed=T )
hour <- timestamp[[1]][1]
print(hour)
}
sapply(x, getdoc)
library(rvest)
library(magrittr)
library(httr)
library(dplyr)
data =read_html("https://www.ptt.cc/bbs/Gossiping/search?page=1&q=%E6%9F%AF%E6%96%87%E5%93%B2") %>% html_text(trim = T)
prefix <- "https://www.ptt.cc/bbs/Gossiping/search?page="
FindURL <- function(URL){
session = rvest::html_session(url = URL)
form = session %>%
html_node("form") %>%
html_form()
session_redirected = rvest::submit_form(session = session, form = form )
URLlink <- session_redirected %>%
html_nodes(".title a") %>% html_attr(.,"href")
title <- session_redirected %>%
html_nodes(".title a") %>% html_text
Date <- session_redirected %>%
html_nodes(".date") %>% html_text
output <- cbind(title,URLlink,Date)
return(output)
}
drko <- data.frame()
for(i in c(1:10))
{
x <- paste0(prefix, i , "&q=%E6%9F%AF%E6%96%87%E5%93%B2")
drko2 <- rbind(drko, FindURL(x))
}
getdoc <- function(URL)
{
# html <- htmlParse(getURL(x))
session = rvest::html_session(url = URL)
form = session %>%
html_node("form") %>%
html_form()
session_redirected = rvest::submit_form(session = session, form = form )
doc <- session_redirected %>%
html_nodes("#main-content") %>% html_text
ssion_redirected = rvest::submit_form(session = session, form = form )
time <- session_redirected %>%
html_nodes(".article-metaline+ .article-metaline .article-meta-value") %>% html_text
temp <- gsub( "  ", " 0", unlist(time) )
part <- strsplit( temp, split=" ", fixed=T )
timestamp <- part[[1]][4]
timestamp <- strsplit( timestamp, split=":", fixed=T )
hour <- timestamp[[1]][1]
print(hour)
}
sapply(x, getdoc)
# result <- FindURL("https://www.ptt.cc/bbs/Gossiping/search?page=1&q=%E6%9F%AF%E6%96%87%E5%93%B2")
# View(result)
getdoc <- function(URL)
{
# html <- htmlParse(getURL(x))
session = rvest::html_session(url = URL)
form = session %>%
html_node("form") %>%
html_form()
session_redirected = rvest::submit_form(session = session, form = form )
doc <- session_redirected %>%
html_nodes("#main-content") %>% html_text
}
sapply(x, getdoc)
library(rvest)
library(magrittr)
library(httr)
library(dplyr)
data =read_html("https://www.ptt.cc/bbs/Gossiping/search?page=1&q=%E6%9F%AF%E6%96%87%E5%93%B2") %>% html_text(trim = T)
prefix <- "https://www.ptt.cc/bbs/Gossiping/search?page="
FindURL <- function(URL){
session = rvest::html_session(url = URL)
form = session %>%
html_node("form") %>%
html_form()
session_redirected = rvest::submit_form(session = session, form = form )
URLlink <- session_redirected %>%
html_nodes(".title a") %>% html_attr(.,"href")
title <- session_redirected %>%
html_nodes(".title a") %>% html_text
Date <- session_redirected %>%
html_nodes(".date") %>% html_text
output <- cbind(title,URLlink,Date)
return(output)
}
drko <- data.frame()
for(i in c(1:10))
{
x <- paste0(prefix, i , "&q=%E6%9F%AF%E6%96%87%E5%93%B2")
drko2 <- rbind(drko, FindURL(x))
}
getdoc <- function(URL)
{
# html <- htmlParse(getURL(x))
session = rvest::html_session(url = URL)
form = session %>%
html_node("form") %>%
html_form()
session_redirected = rvest::submit_form(session = session, form = form )
doc <- session_redirected %>%
html_nodes("#main-content") %>% html_text
time <- session_redirected %>%
html_nodes(".article-metaline+ .article-metaline .article-meta-value") %>% html_text
}
sapply(x, getdoc)
sapply(x, getdoc)
getdoc <- function(URL)
{
# html <- htmlParse(getURL(x))
session = rvest::html_session(url = URL)
form = session %>%
html_node("form") %>%
html_form()
session_redirected = rvest::submit_form(session = session, form = form )
doc <- session_redirected %>%
html_nodes("#main-content") %>% html_text
}
sapply(x, getdoc)
getdoc <- function(URL)
{
# html <- htmlParse(getURL(x))
session = rvest::html_session(url = URL)
form = session %>%
html_node("form") %>%
html_form()
session_redirected = rvest::submit_form(session = session, form = form )
doc <- session_redirected %>%
html_nodes("#main-content") %>% html_text
}
sapply(x, getdoc)
getdoc <- function(URL)
{
# html <- htmlParse(getURL(x))
doc <- session_redirected %>%
html_nodes("#main-content") %>% html_text
}
sapply(x, getdoc)
sapply(x, getdoc)
getdoc <- function(URL)
{
# html <- htmlParse(getURL(x))
session = rvest::html_session(url = URL)
form = session %>%
html_node("form") %>%
html_form()
session_redirected = rvest::submit_form(session = session, form = form )
doc <- session_redirected %>%
html_nodes("#main-content") %>% html_text
}
sapply(x, getdoc)
shiny::runApp('GitHub/NTU-CSX-DataScience--Group5/Finalproject/R Shiny/News_Shiny')
setwd("~/GitHub/NTU-CSX-DataScience--Group5/Finalproject/R Shiny/News_Shiny")
shiny::runApp('~/GitHub/NTU-CSX-DataScience--Group5/Finalproject/R Shiny/FaceBookAPI')
